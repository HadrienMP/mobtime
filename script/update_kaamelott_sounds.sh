#!/usr/bin/env bash

# fail on first error
set -euo pipefail

PROJECT_ROOT=$(realpath "$(dirname "$(realpath "$0")")/..")

source "${PROJECT_ROOT}/script/functions/skip_lines_after_pattern.sh"
source "${PROJECT_ROOT}/script/display_file_between_bounds.sh"
source "${PROJECT_ROOT}/script/functions/skip_lines_before_pattern.sh"

download_sounds() {
    rm --recursive --force ./tmp
    mkdir --parent ./tmp

    curl --silent --show-error --location https://github.com/2ec0b4/kaamelott-soundboard/archive/master.tar.gz |
        tar --extract --ungzip --directory=./tmp kaamelott-soundboard-master/sounds
}

update_sound_folder() {
    mv ./tmp/kaamelott-soundboard-master/sounds/*.mp3 public/sound/kaamelott
}

list_sounds() {
    cd public/sound

    ls kaamelott/* |
        sed --regexp-extended 's/^(.*)$/    , "\1"/g'
    echo ""

    cd ../..
}

update_sounds_file() {
    {
        skip_lines_after_pattern \
            '    -- kaamelott sounds autogenerated begin' \
            <src/elm/Sounds.elm

        list_sounds

        skip_lines_before_pattern \
            '    -- kaamelott sounds autogenerated end' \
            <src/elm/Sounds.elm
    } >>src/elm/Sounds.tmp.elm

    mv src/elm/Sounds.tmp.elm src/elm/Sounds.elm
}

commit_sounds_file() {
    git add public/sound/kaamelott/*
    git commit \
        --only src/elm/Sounds.elm \
        --only public/sound/kaamelott/* \
        --message "update Kaamelott's sounds"
}

main() {
    download_sounds

    update_sound_folder

    update_sounds_file

    commit_sounds_file
}

main
